{"ast":null,"code":"const {\n  RECORD_CREATE_FAIL,\n  RECORD_CREATE_REQUEST,\n  RECORD_CREATE_SUCCESS,\n  RECORD_CREATE_RESET,\n  RECORD_DETAILS_FAIL,\n  RECORD_DETAILS_REQUEST,\n  RECORD_DETAILS_SUCCESS,\n  RECORD_LIST_FAIL,\n  RECORD_LIST_REQUEST,\n  RECORD_LIST_SUCCESS,\n  RECORD_UPDATE_REQUEST,\n  RECORD_UPDATE_SUCCESS,\n  RECORD_UPDATE_FAIL,\n  RECORD_UPDATE_RESET,\n  RECORD_DELETE_REQUEST,\n  RECORD_DELETE_FAIL,\n  RECORD_DELETE_SUCCESS,\n  RECORD_DELETE_RESET\n} = require(\"../constants/recordConstants\");\n\nexport const recordListReducer = (state = {\n  loading: true,\n  records: []\n}, action) => {\n  switch (action.type) {\n    case RECORD_LIST_REQUEST:\n      return {\n        loading: true\n      };\n\n    case RECORD_LIST_SUCCESS:\n      return {\n        loading: false,\n        records: action.payload\n      };\n\n    case RECORD_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const recordDetailsReducer = (state = {\n  loading: true\n}, action) => {\n  switch (action.type) {\n    case RECORD_DETAILS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case RECORD_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        record: action.payload\n      };\n\n    case RECORD_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const recordCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECORD_CREATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case RECORD_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        record: action.payload\n      };\n\n    case RECORD_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case RECORD_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const recordUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECORD_UPDATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case RECORD_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case RECORD_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case RECORD_UPDATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const recordDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECORD_DELETE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case RECORD_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case RECORD_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case RECORD_DELETE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/spekhazarwebsitefrontend/src/reducers/recordReducers.js"],"names":["RECORD_CREATE_FAIL","RECORD_CREATE_REQUEST","RECORD_CREATE_SUCCESS","RECORD_CREATE_RESET","RECORD_DETAILS_FAIL","RECORD_DETAILS_REQUEST","RECORD_DETAILS_SUCCESS","RECORD_LIST_FAIL","RECORD_LIST_REQUEST","RECORD_LIST_SUCCESS","RECORD_UPDATE_REQUEST","RECORD_UPDATE_SUCCESS","RECORD_UPDATE_FAIL","RECORD_UPDATE_RESET","RECORD_DELETE_REQUEST","RECORD_DELETE_FAIL","RECORD_DELETE_SUCCESS","RECORD_DELETE_RESET","require","recordListReducer","state","loading","records","action","type","payload","error","recordDetailsReducer","record","recordCreateReducer","success","recordUpdateReducer","recordDeleteReducer"],"mappings":"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","sourcesContent":["const {\r\n    RECORD_CREATE_FAIL,\r\n    RECORD_CREATE_REQUEST,\r\n    RECORD_CREATE_SUCCESS,\r\n    RECORD_CREATE_RESET,\r\n    RECORD_DETAILS_FAIL,\r\n    RECORD_DETAILS_REQUEST,\r\n    RECORD_DETAILS_SUCCESS,\r\n    RECORD_LIST_FAIL,\r\n    RECORD_LIST_REQUEST,\r\n    RECORD_LIST_SUCCESS,\r\n    RECORD_UPDATE_REQUEST,\r\n    RECORD_UPDATE_SUCCESS,\r\n    RECORD_UPDATE_FAIL,\r\n    RECORD_UPDATE_RESET,\r\n    RECORD_DELETE_REQUEST,\r\n    RECORD_DELETE_FAIL,\r\n    RECORD_DELETE_SUCCESS,\r\n    RECORD_DELETE_RESET,\r\n  } = require(\"../constants/recordConstants\");\r\n  \r\n  export const recordListReducer = (\r\n    state = { loading: true, records: [] },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case RECORD_LIST_REQUEST:\r\n        return { loading: true };\r\n      case RECORD_LIST_SUCCESS:\r\n        return { loading: false, records: action.payload };\r\n      case RECORD_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export const recordDetailsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n      case RECORD_DETAILS_REQUEST:\r\n        return { loading: true };\r\n      case RECORD_DETAILS_SUCCESS:\r\n        return { loading: false, record: action.payload };\r\n      case RECORD_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  export const recordCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case RECORD_CREATE_REQUEST:\r\n        return { loading: true };\r\n      case RECORD_CREATE_SUCCESS:\r\n        return { loading: false, success: true, record: action.payload };\r\n      case RECORD_CREATE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      case RECORD_CREATE_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  export const recordUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case RECORD_UPDATE_REQUEST:\r\n        return { loading: true };\r\n      case RECORD_UPDATE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case RECORD_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      case RECORD_UPDATE_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  export const recordDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case RECORD_DELETE_REQUEST:\r\n        return { loading: true };\r\n      case RECORD_DELETE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case RECORD_DELETE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      case RECORD_DELETE_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}