{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\spekhazarwebsitefrontend\\\\src\\\\screens\\\\ProductEditScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport { detailsProduct, updateProduct } from \"../actions/productActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\nexport default function ProductEditScreen(props) {\n  const productId = props.match.params.id;\n  const [name, setName] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      props.history.push(\"/productlist\");\n    }\n\n    if (!product || product._id !== productId || successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      dispatch(detailsProduct(productId));\n    } else {\n      setName(product.name);\n      setAuthor(product.author);\n      setImage(product.image);\n      setLocation(product.location);\n      setType(product.type);\n      setCategory(product.category);\n      setDescription(product.description);\n    }\n  }, [product, dispatch, productId, successUpdate, props.history]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // TODO: dispatch update product\n\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      author,\n      image,\n      category,\n      location,\n      type,\n      description\n    }));\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState(\"\");\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"image\", file);\n    setLoadingUpload(true);\n\n    try {\n      const {\n        data\n      } = await Axios.post(\"https://mernspeapplicaton.herokuapp.com/api/uploads\", bodyFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      setImage(data);\n      setLoadingUpload(false);\n    } catch (error) {\n      setErrorUpload(error.message);\n      setLoadingUpload(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Edit Product \", productId)), loadingUpdate && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 27\n    }\n  }), errorUpdate && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, errorUpdate), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editmainform\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"image\",\n    type: \"text\",\n    placeholder: \"Enter image\",\n    value: image,\n    onChange: e => setImage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"imageFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Image File\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"imageFile\",\n    label: \"Choose Image\",\n    onChange: uploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }), loadingUpload && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 35\n    }\n  }), errorUpload && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, errorUpload)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"author\",\n    type: \"text\",\n    placeholder: \"Enter author name\",\n    value: author,\n    onChange: e => setAuthor(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"category\",\n    type: \"text\",\n    placeholder: \"Enter category\",\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"location\",\n    type: \"text\",\n    placeholder: \"Enter Location\",\n    value: location,\n    onChange: e => setLocation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"type\",\n    type: \"text\",\n    placeholder: \"Enter type\",\n    value: type,\n    onChange: e => setType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    rows: \"3\",\n    type: \"text\",\n    placeholder: \"Enter description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, \"Update / Cretate Event\"))))));\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/spekhazarwebsitefrontend/src/screens/ProductEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Axios","detailsProduct","updateProduct","LoadingBox","MessageBox","PRODUCT_UPDATE_RESET","ProductEditScreen","props","productId","match","params","id","name","setName","author","setAuthor","image","setImage","category","setCategory","description","setDescription","location","setLocation","type","setType","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","dispatch","history","push","_id","submitHandler","e","preventDefault","loadingUpload","setLoadingUpload","errorUpload","setErrorUpload","userSignin","userInfo","uploadFileHandler","file","target","files","bodyFormData","FormData","append","data","post","headers","Authorization","token","message","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { detailsProduct, updateProduct } from \"../actions/productActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nexport default function ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\")\r\n  const [type, setType] = useState(\"\") \r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push(\"/productlist\");\r\n    }\r\n    if (!product || product._id !== productId || successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(detailsProduct(productId));\r\n    } else {\r\n      setName(product.name);\r\n      setAuthor(product.author);\r\n      setImage(product.image);\r\n      setLocation(product.location)\r\n      setType(product.type)\r\n      setCategory(product.category);\r\n      setDescription(product.description);\r\n    }\r\n  }, [product, dispatch, productId, successUpdate, props.history]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // TODO: dispatch update product\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        author,\r\n        image,\r\n        category,\r\n        location,\r\n        type,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n  const [loadingUpload, setLoadingUpload] = useState(false);\r\n  const [errorUpload, setErrorUpload] = useState(\"\");\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append(\"image\", file);\r\n    setLoadingUpload(true);\r\n    try {\r\n      const { data } = await Axios.post(\"https://mernspeapplicaton.herokuapp.com/api/uploads\", bodyFormData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      });\r\n      setImage(data);\r\n      setLoadingUpload(false);\r\n    } catch (error) {\r\n      setErrorUpload(error.message);\r\n      setLoadingUpload(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId}</h1>\r\n        </div>\r\n        {loadingUpdate && <LoadingBox></LoadingBox>}\r\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n        {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n            <div className=\"editmainform\">\r\n              <div>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></input>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"image\">Image</label>\r\n                <input\r\n                  id=\"image\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter image\"\r\n                  value={image}\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"imageFile\">Image File</label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"imageFile\"\r\n                  label=\"Choose Image\"\r\n                  onChange={uploadFileHandler}\r\n                ></input>\r\n                {loadingUpload && <LoadingBox></LoadingBox>}\r\n                {errorUpload && (\r\n                  <MessageBox variant=\"danger\">{errorUpload}</MessageBox>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"author\">Author</label>\r\n                <input\r\n                  id=\"author\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter author name\"\r\n                  value={author}\r\n                  onChange={(e) => setAuthor(e.target.value)}\r\n                ></input>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"category\">Category</label>\r\n                <input\r\n                  id=\"category\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter category\"\r\n                  value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                ></input>\r\n              </div>\r\n\r\n\r\n              <div>\r\n                <label htmlFor=\"category\">Location</label>\r\n                <input\r\n                  id=\"location\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Location\"\r\n                  value={location}\r\n                  onChange={(e) => setLocation(e.target.value)}\r\n                ></input>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"category\">Type</label>\r\n                <input\r\n                  id=\"type\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter type\"\r\n                  value={type}\r\n                  onChange={(e) => setType(e.target.value)}\r\n                ></input>\r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <div>\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  rows=\"3\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter description\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </div>\r\n              <div>\r\n                <label></label>\r\n                <button className=\"primary\" type=\"submit\">\r\n                  Update / Cretate Event\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}